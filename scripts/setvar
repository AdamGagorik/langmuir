#!/usr/bin/python
import sys
import os
import optparse as op

def printverbose(string):
 try:
  if not options.silent:
   print("message: "+str(string))
 except:
  pass

parser = op.OptionParser()
parser.add_option("-i",dest="ifile",default="ifile.inp",action="store",type="string",help="input file to modify",metavar="IFILE")
parser.add_option("-o",dest="ofile",default=None,action="store",type="string",help="output file to write",metavar="OFILE")
parser.add_option("-k",dest="key",default=None,action="store",type="string",help="variable key to write", metavar="KEY")
parser.add_option("-n",dest="value",default=None,action="store",type="string",help="variable value to write",metavar="VALUE")
parser.add_option("-s", "--silent",action="store_true", dest="silent",help="do not print messages to screen")

(options, args) = parser.parse_args()

if not ( options.value and options.key ):
 parser.print_help()
 sys.exit()

try:
 printverbose("opening "+options.ifile)
 handle   = open(options.ifile,'r')
 contents = handle.readlines()
 handle.close()
except:
 printverbose("no infile found - creating a new infile") 
 contents= []

printverbose("looking at values")
VARIABLES = []
for line in contents:
 items = line.strip().split("=")
 if len(items) == 2:
  VARIABLES.append(items)
 else:
  printverbose("ignoring line: "+line.strip())

NEWVARS = []
count = 0
for items in VARIABLES:
 if not items[0] == options.key:
  NEWVARS.append(items[0] + "=" + items[1]+"\n") 
 else:
  printverbose("found key and value: " + items[0] + " " + items[1])
  NEWVARS.append(options.key+"="+options.value+"\n")
  count += 1

if count == 0:
 printverbose("adding new key and value")
 NEWVARS.append(options.key+"="+options.value+"\n")
if count == 1:
 printverbose("overwriting key and value")
if count >= 2:
 raise ValueError("duplicate key and value found")

if options.ofile:
 printverbose("writing results in "+options.ofile)
 outfile = open(options.ofile,'w')
else:
 printverbose("writing results in "+options.ifile)
 outfile = open(options.ifile,'w')

for line in NEWVARS:
 outfile.write(line)

outfile.close()
