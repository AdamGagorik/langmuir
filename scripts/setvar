#!/usr/bin/python
import sys
import os
import argparse

parser = argparse.ArgumentParser(description='script to read/write key=value pairs to an input file')
parser.add_argument('-i',action='store',type=str,dest='ifile',help='input file (optional)',default=None)
parser.add_argument('-o',action='store',type=str,dest='ofile',help='output file (optional)',default=None)
parser.add_argument('-k',action='store',type=str,dest='key',help='key (required)',default=None)
parser.add_argument('-v',action='store',type=str,dest='value',help='value (required)',default=None)
parser.add_argument('-a',action='store_true',dest='append',help='append key=value pair (if found in input) (false)',default=False)
options = parser.parse_args()

if not options.key or not options.value:
 parser.print_help()
 print("\nmust at least give a key and value pair")
 sys.exit()

if options.append:
 if options.ifile and not options.ofile:
  os.system('cp %s %s.bak'%(options.ifile,options.ifile))
  os.system('echo "%s=%s" >> %s'%(options.key,options.value,options.ifile))
  os.system('diff %s.bak %s'%(options.ifile,options.ifile))
 if options.ifile and options.ofile:
  os.system('cat %s > %s'%(options.ifile,options.ofile))
  os.system('echo "%s=%s" >> %s'%(options.key,options.value,options.ofile))
  os.system('diff %s %s'%(options.ifile,options.ofile))
 if not options.ifile and not options.ofile:
  handle = open('default.inp','w')
  handle.write("%s=%s"%(options.key,options.value))
  handle.close()

else:
 if options.ifile and not options.ofile:
  os.system('sed --in-place=.bak -e "s/^\s*#*\(%s\)=\S*\(\s*#*.*$\)/\\1=%s\\2/" %s'%(options.key,options.value,options.ifile))
  os.system('diff %s.bak %s'%(options.ifile,options.ifile))
 if options.ifile and options.ofile:
  os.system('sed -e "s/^\s*#*\(%s\)=\S*\(\s*#*.*$\)/\\1=%s\\2/" %s > %s'%(options.key,options.value,options.ifile,options.ofile))
  os.system('diff %s %s'%(options.ifile,options.ofile))
 if not options.ifile and not options.ofile:
  handle = open('default.inp','w')
  handle.write("%s=%s"%(options.key,options.value))
  handle.close()
