#!/usr/bin/python
import sys
import os

class ODict:
 
 def __init__(self):
  self.__keys = []
  self.__values = {}

 def __setitem__(self,key,value):
  if not key in self.__keys:
   self.__keys.append(key)
  else:
   index = self.__keys.index(key)
   self.__keys.pop(index)
   self.__keys.append(key)
  self.__values[key] = str(value)
 
 def __getitem__(self,key):
  return ( self.__values[key] )
 
 def __str__(self):
  s = ""
  for i in range(len(self.__keys)):
   s += "#%s=%s\n"%(self.__keys[i],self.__values[self.__keys[i]]) 
  return s.strip()

working_variables = ODict()
working_variables["variable.working"] = "voltage.drain"
working_variables["variable.start"] = "0"
working_variables["variable.final"] = "100"
working_variables["variable.steps"] = "10"

grid_variables = ODict()
grid_variables["grid.width"] = "1024"
grid_variables["grid.height"] = "256"
grid_variables["grid.depth"] = "1"

carrier_variables = ODict()
carrier_variables["charge.percentage"] = "0.01"
carrier_variables["grid.charge"] = "false"
carrier_variables["interaction.coulomb"] = "false"

defect_variables = ODict()
defect_variables["defect.percentage"] = "0.00"
defect_variables["charged.defects"] = "false"
defect_variables["z.defect"] = "0"

trap_variables = ODict()
trap_variables["trap.percentage"] = "0.00"
trap_variables["delta.epsilon"] = "0.00"
trap_variables["charged.traps"] = "false"
trap_variables["z.trap"] = "0"
trap_variables["traps.heterogeneous"] = "false"
trap_variables["seed.percentage"] = "0.10"

energy_variables = ODict()
energy_variables["temperature.kelvin"] = "300.0"
energy_variables["voltage.source"] = "0.00"
energy_variables["voltage.drain"] = "1.00"
energy_variables["potential.noise"] = "false"
energy_variables["potential.stdev"] = "0.05"
energy_variables["potential.averg"] = "0.00"
energy_variables["source.barrier"] = "0.10"
energy_variables["potential.form"] = "o_linearpotential"
energy_variables["potential.point"] = "(0,0,0,0)"

output_variables = ODict()
output_variables["iterations.warmup"] = "1000"
output_variables["iterations.real"] = "10000"
output_variables["iterations.print"] = "100"
output_variables["iterations.xyz"] = "false"
output_variables["output.precision"] = "5"
output_variables["output.width"] = "20"

print("#WORKING")
print(working_variables)
print("")
print("#GRID")
print(grid_variables)
print("")
print("#CARRIERS")
print(carrier_variables)
print("")
print("#DEFECTS")
print(defect_variables)
print("")
print("#TRAPS")
print(trap_variables)
print("")
print("#ENERGY")
print(energy_variables)
print("")
print("#OUTPUT")
print(output_variables)

